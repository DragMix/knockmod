properties([pipelineTriggers([githubPush()])])

pipeline {
    agent any
    options { timestamps () }
    tools {
            gradle "gradle-builder1"
    }

    stages {
        stage('Git checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/DragMix/knockmod.git']]
                ])
            }
        }
        stage('Gradle mod build') {
            steps {
                sh 'gradle build'
            }
        }
        stage('Deploy mod to test server') {
            steps {
                sh 'scp /var/lib/jenkins/workspace/modIntegration/build/libs/*.jar flynn@testvm:/home/flynn/server/mods/'
                sh 'ssh flynn@testvm ls -la /home/flynn/server/mods'
            }
        }
        stage('Test mod on test server') {
            steps {
                sh 'ssh flynn@testvm /home/flynn/server/start.sh'
                sh 'sleep 210'
                sh 'ssh flynn@testvm /home/flynn/server/stop.sh'
                sh 'scp flynn@testvm:/home/flynn/server/logs/latest.log ~/test_log/'
                sh 'result=`grep ~/test_log/latest.log -e "Done" | wc -l`'
            }
        }
        stage('Deploy mod to prod server') {
            steps {
                sh 'ssh flynn@prodvm /home/flynn/server/stop.sh'
                sh 'scp /var/lib/jenkins/workspace/modIntegration/build/libs/*.jar flynn@prodvm:/home/flynn/server/mods/'
                sh 'ssh flynn@prodvm /home/flynn/server/start.sh'
                sh 'sleep 210'
                sh 'scp flynn@prodvm:/home/flynn/server/logs/latest.log ~/prod_log'
                sh 'result=`grep ~/prod_log/latest.log -e "Done" | wc -l`'
            }
        }
    }
    
}

